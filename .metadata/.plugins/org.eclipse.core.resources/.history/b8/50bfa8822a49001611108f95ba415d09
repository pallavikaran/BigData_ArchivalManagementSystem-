package Sqoop;

import java.io.*;
import java.util.*;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import java.net.*;
import org.apache.hadoop.fs.*;
import org.apache.hadoop.conf.*;
import org.apache.hadoop.io.*;
import org.apache.hadoop.mapred.*;
import org.apache.hadoop.util.*;
import org.w3c.dom.Document;
import org.w3c.dom.Element;


public class Workflow2{
        public static void main (String [] args) throws Exception{
                try{
                	DocumentBuilderFactory dbFactory =
               	         DocumentBuilderFactory.newInstance();
               	         DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
               	         Document doc = dBuilder.newDocument();
               	         // root element
               	         Element rootElement = doc.createElement("workflow-app");
               	         rootElement.setAttribute("name", "WorkflowWithSqoopAction");
               	         rootElement.setAttribute("xmlns", "uri:oozie:workflow:0.1");
               	         doc.appendChild(rootElement);
               	         
               	         Element start = doc.createElement("start");
               	         start.setAttribute("to", "sqoopAction");
               	         rootElement.appendChild(start);
               	         
               	         Element action = doc.createElement("action");
               	         action.setAttribute("name", "sqoopAction");
               	         //Attr attrType = doc.createAttribute("name");
               	         //attrType.setValue("sqoopAction");
               	         //action.setAttributeNode(attrType);
               	         rootElement.appendChild(action);
               	         
               	         Element sqoop = doc.createElement("sqoop");
               	         sqoop.setAttribute("xmlns", "uri:oozie:sqoop-action:0.2");
               	         action.appendChild(sqoop);
               	         
               	         Element jobTracker = doc.createElement("job-tracker");
               	         jobTracker.appendChild(doc.createTextNode("${jobTracker}"));
               	         sqoop.appendChild(jobTracker);
               	         
               	         Element nameNode = doc.createElement("name-node");
               	         nameNode.appendChild(doc.createTextNode("${nameNode}"));
               	         sqoop.appendChild(nameNode);
               	         
               	         Element command = doc.createElement("command");
               	         //command.appendChild(doc.createTextNode("import --connect jdbc:mysql://localhost/TEST  --username root --password cloudera --table pet --target-dir hdfs://quickstart.cloudera:8020/user/cloudera/oozieOutputFromJava  -m 1 "));
               	         command.appendChild(doc.createTextNode("import --connect jdbc:mysql://localhost/retail_db --username=root --password=cloudera --table customers --hive-import -m 1 --hive-table=customers "));
               	          //command.appendChild(doc.createTextNode("import --connect jdbc:oracle:thin:@amsdatabase1.cqszpumnfyqd.us-east-1.rds.amazonaws.com:1521:nmsrvc --username=root --password=cloudera --table pet --hive-import -m 1 --hive-table=pet "));
               	         sqoop.appendChild(command);
               	         
               	         Element ok = doc.createElement("ok");
               	         ok.setAttribute("to", "end");
               	         rootElement.appendChild(ok);
               	         
               	         Element error = doc.createElement("error");
               	         error.setAttribute("to", "killJob");
               	         rootElement.appendChild(error);
               	         
               	         Element kill = doc.createElement("kill");
               	         kill.setAttribute("name", "killJob");
               	         rootElement.appendChild(kill);
               	         
               	         Element message = doc.createElement("message");
               	         message.appendChild(doc.createTextNode("Killed job due to error: ${wf:errorMessage(wf:lastErrorNode())}"));
               	         rootElement.appendChild(message);
               	         
               	         Element end = doc.createElement("end");
               	         end.setAttribute("name", "killJob");
               	         rootElement.appendChild(end);
               	         
               	         // write the content into xml file
               	         TransformerFactory transformerFactory =
               	         TransformerFactory.newInstance();
               	         Transformer transformer =
               	         transformerFactory.newTransformer();
               	         DOMSource source = new DOMSource(doc);
               	         //Path pt=new Path("hdfs://quickstart.cloudera:8020/user/cloudera/workflow.xml");
               	         StreamResult result =new StreamResult(new File("hdfs://quickstart.cloudera:8020/user/cloudera/workflow.xml"));
               	         System.out.println("####################");
               	         //FileSystem fs = FileSystem.get(new Configuration());
               	         transformer.transform(source, result);
               	         // Output to console for testing
               	         StreamResult consoleResult =new StreamResult(System.out);
               	         transformer.transform(source, consoleResult);
               	         /*Path pt=new Path("hdfs://quickstart.cloudera:8020/user/cloudera");
               	         FileSystem fs = FileSystem.get(new Configuration());
               	         BufferedWriter br=new BufferedWriter(new OutputStreamWriter(fs.create(pt,true)));
                                                   // TO append data to a file, use fs.append(Path f)
                        String line;
                        line="Disha Dishu Daasha";
                        System.out.println(line);
                        br.write(line);
                        br.close();*/
                }catch(Exception e){
                	e.printStackTrace();
                        System.out.println("File not found");
                }
        }
}
